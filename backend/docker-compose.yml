services:
  server:
    container_name: funiq_ai_server
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MODE: "web"
    ports:
      - "5001:5000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_worker:
    container_name: funiq_ai_celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MODE: "worker"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis

  db:
    image: postgres:15-alpine
    container_name: ${PGHOST:-funiq_ai_postgres}
    restart: always
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-funiq_ai_db_pass}
      POSTGRES_DB: ${POSTGRES_DB:-funiq_ai_db}
    ports:
      - "5432:5432"
    volumes:
      - ${PGDATA_HOST_VOLUME:-./volumes/db/data}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6-alpine
    user: redis
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-funiq_ai_redis_pass}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-funiq_ai_redis_pass}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

